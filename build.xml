<project name="ydn-db" basedir="." default="compile-debug">
    <dirname property="ydn-db.dir" file="${ant.file.ydn-db}"/>
    <property name="work.dir" location="${ydn-db.dir}/.." />
    <property name="ydn-base.dir" location="${work.dir}/ydn-base" />
    <import file="${work.dir}/ydn/build.xml"/>
    <property name="ver" value="0.7.0"/>
    <target name="compile-debug" description="compile JS">
        <mkdir dir="${ydn-db.dir}/jsc"/>
        <closure-compile compilationlevel="ADVANCED_OPTIMIZATIONS"
                         input="${ydn-db.dir}/js/ydn/db/storage.js"
                         input.dir="${ydn-db.dir}/js"
                         output.fn="${ydn-db.dir}/jsc/ydn-db.js">
            <extrapaths>
                <arg line='-p "${ydn-base.dir}/js"'/>
            </extrapaths>
        </closure-compile>
    </target>
    <macrodef name="adv-comp">
        <attribute name="input.fn"/>
        <attribute name="output.fn"/>
        <attribute name="output.dir"/>
        <attribute name="closure.entry"/>
        <attribute name="cssmap-target" default="dummy"/>
        <sequential>
            <closure-compile compilationlevel="ADVANCED_OPTIMIZATIONS"
                             base.dir="."
                             input="@{input.fn}"
                             input.dir="${ydn-db.dir}/js"
                             output.fn="@{output.dir}/@{output.fn}">
                <extrapaths>
                    <arg line='-p "${ydn-base.dir}/js"'/>
                    <arg line='-p "${ydn-db.dir}/js"'/>
                    <arg line='-p "${ydn.dir}/js"'/>
                </extrapaths>
                <options>
                    <!--<arg line='-f "-generate_exports"'/>-->
                    <arg line='-f "--externs=${ydn.dir}/externs/misc.js"'/>
                    <arg line='-f "--closure_entry_point=@{closure.entry}"'/>
                    <arg line='-f "--define=goog.DEBUG=false"'/>
                    <arg line='-f "--output_wrapper=${outputwrapper.norun}"'/>
                </options>
            </closure-compile>
        </sequential>
    </macrodef>
    <target name="simple" description="generates simple compile file">
        <mkdir dir="${ydn-db.dir}/jsc"/>
        <!--SIMPLE_OPTIMIZATIONS-->
        <closure-compile compilationlevel="WHITESPACE_ONLY"
                         base.dir="."
                         input="${ydn-db.dir}/js/ydn/db/storage.js"
                         output.fn="${ydn-db.dir}/jsc/ydn-db-${ver}.js"
                         input.dir="${ydn-db.dir}/js">
            <extrapaths>
                <arg line='-p "${ydn-base.dir}/js"'/>
                <arg line='-p "${ydn-db.dir}/js"'/>
                <arg line='-p "${ydn.dir}/js"'/>
            </extrapaths>
            <options>
                <arg line='-f "--formatting=PRETTY_PRINT"'/>
                <arg line='-f "--externs=${ydn.dir}/externs/misc.js"'/>
                <arg line='-f "--closure_entry_point=ydn.db.Storage"'/>
            </options>
        </closure-compile>
        <copy file="${ydn-db.dir}/jsc/ydn-db-${ver}.js"
              tofile="${work.dir}/hijax-server/static/jsc/ydn-db.js"/>
    </target>
    <target name="compile-core" description="generates compiled files for client js, /jsc/sync.jc">
        <mkdir dir="${ydn-db.dir}/jsc"/>
        <adv-comp
                input.fn="${ydn-db.dir}/js/ydn/db/storage_core.js"
                output.dir="${ydn-db.dir}/jsc"
                output.fn="core-ydn-db-min-${ver}.js"
                closure.entry="ydn.db.StorageCore">
        </adv-comp>
        <copy file="${ydn-db.dir}/jsc/core-ydn-db-min-${ver}.js"
              tofile="${work.dir}/hijax-server/static/jsc/core-ydn-db-min.js"/>
    </target>
    <target name="compile" description="generates compiled files for client js, /jsc/sync.jc">
        <mkdir dir="${ydn-db.dir}/jsc"/>
        <adv-comp
                input.fn="${ydn-db.dir}/js/ydn/db/storage.js"
                output.dir="${ydn-db.dir}/jsc"
                output.fn="ydn-db-min-${ver}.js"
                closure.entry="ydn.db.Storage">
        </adv-comp>
        <copy file="${ydn-db.dir}/jsc/ydn-db-min-${ver}.js"
              tofile="${work.dir}/hijax-server/static/jsc/ydn-db-min.js"/>
    </target>
    <target name="gen-all-test-js" description="generate all test js">
        <gen-js-test base.dir="${ydn-db.dir}/test"></gen-js-test>
    </target>
    <target name="deps" description="list dependency files">
        <delete file="${ydn-db.dir}/js/deps.js"/>
        <calc-deps
                input.dir="${ydn-db.dir}/js"
                output.fn="${ydn-db.dir}/js/deps.js">
        </calc-deps>
    </target>
    <target name="jstd" description="print out jstd file for JS test driver">
        <jstd-gen base.dir="${ydn-db.dir}">
            <deps-options>
                <arg line='--path "${ydn.dir}/js"'/>
                <arg line='--path "${ydn-base.dir}/js"'/>
            </deps-options>
        </jstd-gen>
    </target>

    <target name="jquery" description="Generate HTML from soy template">
        <property name="jout.js" value="${ydn-db.dir}/jsc/jquery-ydn-db-min-${ver}.js"/>
        <gen-soy-web output.fn="${jout.js}"
                     namespace="templ.ydn.db.jquery.render"
                     templ.dir="${ydn-db.dir}/templ"
                     content-file="${ydn-db.dir}/jsc/ydn-db-min-${ver}.js">
            <soy-web-optionls>
                <arg value="--notidy=true"/>
            </soy-web-optionls>
        </gen-soy-web>
        <copy file="${jout.js}"
              todir="${work.dir}/ydn-dev/out/ydn-db/example"/>
    </target>
    <target name="jsdoc" description="create document">
        <mkdir dir="${work.dir}/ydn-dev/out/ydn-db/docs"/>
        <java jar="${jsdoc.dir}/jsrun.jar" fork="true" failonerror="true" logError="true">
            <arg line="${jsdoc.dir}/app/run.js" />
            <arg line="${ydn-db.dir}/js"/>
            <arg line="--verbose"/>
            <arg line="--recurse=6"/>
            <arg line="--template=${jsdoc.dir}/templates/jsdoc"/>
            <arg line="--directory=${work.dir}/ydn-dev/out/ydn-db/docs"/>
        </java>
    </target>
    <target name="jsdoc1" description="create document for storage class only">
        <mkdir dir="${work.dir}/ydn-dev/out/ydn-db/docs"/>
        <java jar="${jsdoc.dir}/jsrun.jar" fork="true" failonerror="true" logError="true">
            <arg line="${jsdoc.dir}/app/run.js" />
            <arg line="${ydn-db.dir}/js/ydn/db/storage.js"/>
            <arg line="--verbose"/>
            <arg line="--template=${work.dir}/ydn-dev/content/jsdoc-templates/jsdoc"/>
            <arg line="--directory=${work.dir}/ydn-dev/out/ydn-db/docs"/>
        </java>
    </target>
    <target name="build" description="build all distribution"
            depends="compile-core,compile,simple,jquery">

    </target>
</project>